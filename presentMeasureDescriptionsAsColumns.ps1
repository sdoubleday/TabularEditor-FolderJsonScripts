PARAM(
    [ValidateNotNullorEmpty()][ValidateScript({
                IF (Test-Path -PathType Container -Path $_ ) 
                    {$True}
                ELSE {
                    Throw "$_ is not a Directory."
                } 
            })][String]$tabularEditorFolderRoot
)
BEGIN{

}
PROCESS{
    Remove-Item -Recurse $tabularEditorFolderRoot\tables\_Documentation;
    $listOfTables = Get-ChildItem $tabularEditorFolderRoot\tables;


    #region recreate documentation table
    New-Item -ItemType Directory $tabularEditorFolderRoot\tables\_Documentation;
    New-Item -ItemType Directory $tabularEditorFolderRoot\tables\_Documentation\partitions;
    New-Item -ItemType Directory $tabularEditorFolderRoot\tables\_Documentation\columns;

    $template = [PSCustomObject] @{
        name = "_Documentation";
        description = "Autogenerated Documentation Table"
    };
    New-Item -Force -ItemType File $tabularEditorFolderRoot\tables\_Documentation\$($template.name).json | Add-Content -Encoding UTF8 -Value $( $template | ConvertTo-Json ) ;

    $template = [PSCustomObject] @{
        name = "partition1";
        mode = "import";
        source = [PSCustomObject] @{
            type = "calculated";
            expression = 'ROW ( "Purpose", "Ad-hoc design-time access to SSAS column documentation")';
         }
    };
    New-Item -Force -ItemType File $tabularEditorFolderRoot\tables\_Documentation\partitions\$($template.name).json | Add-Content -Encoding UTF8 -Value $( $template | ConvertTo-Json ) ;

    $template = [PSCustomObject] @{
        name = "DocKey";
        expression = 1;
        type = "calculated";
        dataType = "Int64";
        displayFolder = "SurrogateKeys";
        isHidden = "true"
    };
    New-Item -Force -ItemType File $tabularEditorFolderRoot\tables\_Documentation\columns\$($template.name).json | Add-Content -Encoding UTF8 -Value $( $template | ConvertTo-Json ) ;

    #endregion

    $listOfTables | ForEach-Object {
        $thisTablePath = $_.FullName;
        Get-ChildItem $thisTablePath | Get-ChildItem measures,columns,hierarchies | ForEach-Object {
            $json = Get-Content $_.FullName | ConvertFrom-Json ;
            $template = [PSCustomObject] @{
                type = 'calculated';
                dataType = 'string';
                displayFolder = "$($thisTablePath.BaseName)\$($_.BaseName)$(if ( $json.displayFolder -notlike $null ) { "\$($json.displayFolder)" } )";
                name = "$($json.name) - ABOUT";
                expression = """" + $($json.name) + " - DESCRIPTION - " + $( $($json.description) -replace '"', '""' ) + "; EXPRESSION - " + $( $($json.expression) -replace '"', '""' ) + """";
                description = "Autogenerated Documentation Column."
            };
            New-Item -Force -ItemType File $tabularEditorFolderRoot\tables\_Documentation\columns\$($template.name).json | Add-Content -Encoding UTF8 -Value $( $template | ConvertTo-Json ) ;
        }
    }
}
END{}
